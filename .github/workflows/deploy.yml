name: Build and deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  PHP_VERSION: '8.1'
  NODE_VERSION: '18.x'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Set up Composer caching
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Run composer install
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress -o --no-dev

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: npm install, build, and test
        run: |
          npm install
          npm run build

      - name: Zip artifact
        run: zip artifact.zip ./* -r -q

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: artifact.zip

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production
      url: https://xdrop.fr

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: app

      - name: Unzip artifact
        run: unzip  -q artifact.zip

      - name: Set up .env
        run: echo "${{ secrets.ENV_FILE }}" >> .env

      - name: Rsync
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr --delete --exclude="artifact.zip" --exclude="node_modules" -q
          path: .
          remote_path: ${{ secrets.DEPLOY_PATH }}
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY }}

      - name: Finalize deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan storage:link
            php artisan migrate --force
            chown -R www-data:www-data .
            find . -type f -exec chmod 644 -- {} +
            find . -type d -exec chmod 755 -- {} +
